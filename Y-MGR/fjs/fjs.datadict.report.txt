Ext.namespace('Ext.fjs.datadict.report');
Ext.fjs.datadict.report.g_url='fjs/dict_report.do';
Ext.fjs.datadict.report.addWindow=Ext.extend(Ext.Window,{
	constructor:function(tree){
		this.tree=tree;
		this.form=new Ext.FormPanel({
			cls:"x-panel-mc",
			layout:"html",
			layoutConfig:{css:"fjs-form",template:"datadict/report_tree.tpl"},
			style:"padding:0",
			items:[
				{xtype:"hidden",name:"SID"},
				{xtype:"textfield",name:"SNO",width:260,allowBlank:false,boldLabel:true,minLength:3,maxLength:30},
				{xtype:"textfield",name:"NAME",width:260,allowBlank:false,boldLabel:true,minLength:3,maxLength:50}
			]
		});
		Ext.fjs.datadict.report.addWindow.superclass.constructor.call(this,{
			iconCls:"btn-add",
			title:"${dict.title.type2}",
			width:380,
			height:160,
			autoHeight:true,
			border:false,
			closeAction:"hide",
			modal:true,
			plain:true,
			resizable:false,
			items:this.form,
			buttonAlign:"center",
			buttons:[{iconCls:"btn-accept1",text:"${fzm.btn.confirm}",handler:this.window_submit,scope:this},{iconCls:"btn-stop1",text:"${fzm.btn.cancel}",handler:this.window_close,scope:this}]
		});
	},
	window_submit:function(){
		if(!Ext.fjs.checkValid(this.form)) return;
		var node=this.tree.getSelectionModel().getSelectedNode();
		this.form.getForm().submit(Ext.fjs.saveAction({url:Ext.fjs.datadict.report.g_url,params:{action:"add",tid:(node?node.id:0)},success:this.add_success,scope:this}));
	},
	add_success:function(form,opts){
		this.window_close();
		var fP,node=this.tree.getSelectionModel().getSelectedNode();
		if(!node||node.id=="0"){
			this.tree.root.reload();
		}else if(node.parentNode){
			fP=node.getPath();
			node.parentNode.reload();
			this.tree.expandPath(fP);
		}else{
			this.tree.root.reload();
		}
	},
	window_close:function(){
		this.form.getForm().reset();
		this.hide();
	}
});
Ext.fjs.datadict.report.updateWindow=Ext.extend(Ext.Window,{
	constructor:function(tree){
		this.tree=tree;
		this.form=new Ext.FormPanel({
			cls:"x-panel-mc",
			layout:"html",
			layoutConfig:{css:"fjs-form",template:"datadict/report_tree.tpl"},
			style:"padding:0px",
			items:[
				{xtype:"hidden",name:"SID"},
				{xtype:"textfield",name:"SNO",width:260,allowBlank:false,boldLabel:true,minLength:3,maxLength:30},
				{xtype:"textfield",name:"NAME",width:260,allowBlank:false,boldLabel:true,minLength:3,maxLength:50}
			]
		});
		Ext.fjs.datadict.report.updateWindow.superclass.constructor.call(this,{
			iconCls:"btn-edit",
			title:"${dict.msg.edit}",
			width:380,
			autoHeight:true,
			border:false,
			closeAction:"hide",
			modal:true,
			plain:true,
			resizable:false,
			items:[this.form],
			buttonAlign:"center",
			buttons:[{iconCls:"btn-accept1",text:"${fzm.btn.confirm}",handler:this.window_submit,scope:this},{iconCls:"btn-stop1",text:"${fzm.btn.cancel}",handler:this.window_close,scope:this}]
		});
	},
	window_submit:function(){
		if(Ext.fjs.checkValid(this.form)){
			this.form.getForm().submit(Ext.fjs.saveAction({url:Ext.fjs.datadict.report.g_url,params:{action:"update"},success:this.update_success,scope:this}));
		}
	},
	update_success:function(form,opts){
		this.window_close();
		var node=this.tree.getSelectionModel().getSelectedNode(),fP=node.getPath();
		if(node.parentNode){
			node.parentNode.reload();
			this.tree.expandPath(fP);
		}else{
			this.tree.root.reload();
		}
	},
	window_close:function(){
		this.form.getForm().reset();
		this.hide();
	},
	open:function(btn){
		var node=this.tree.getSelectionModel().getSelectedNode();
		this.form.getForm().load(Ext.fjs.loadAction({url:Ext.fjs.datadict.report.g_url,params:{action:"getFieldMenu",sid:node.id},show:true,scope:this}));
	}
});
Ext.fjs.datadict.report.ordWindow=Ext.extend(Ext.Window,{
	constructor:function(tree){
		this.tree=tree;
		this.store=new Ext.data.Store({
			autoDestroy:true,
			url:Ext.fjs.datadict.report.g_url,
			baseParams:{action:"getChildrens"},
			reader:new Ext.data.JsonReader({root:"",fields:["id","text"]})
		});
		this.form=new Ext.form.FormPanel({
			frame:true,
			layout:"column",
			labelAlign:"left",
			labelWidth:85,
			width:255,
			height:222,
			style:"padding-right:1.8px;padding-bottom:1.8px",
			items:[
				{xtype:"hidden",name:"SID"},
				{xtype:"fjs-itemorder",name:"IDS",multiselects:{width:250,height:216,allowBlank:false,ddReorder:true,store:this.store,displayField:"text",valueField:"id"}}
			]
		});
		Ext.fjs.datadict.report.ordWindow.superclass.constructor.call(this,{
			iconCls:"btn-order",
			title:"${dict.title.order}",
			layout:"fit",		//样式充满窗口
			width:300,		//窗口宽度
			height:300,		//窗口高度
			closeAction:"hide",	//默认窗口隐藏close,hide
			modal:true,		//模式窗口，默认为false
			plain:true,
			resizable:false,	//窗口的大小不允许拖动,默认为true
			items:this.form,
			buttonAlign:"center",
			buttons:[{iconCls:"btn-accept1",text:"${fzm.btn.submit}",handler:this.window_submit,scope:this},{iconCls:"btn-stop1",text:"${fzm.btn.cancel}",handler:this.window_close,scope:this}]
		});
	},
	window_close:function(){
		this.form.getForm().reset();
		this.hide();
	},
	window_submit:function(){
		if(Ext.fjs.checkValid(this.form)){
			this.form.getForm().submit(Ext.fjs.saveAction({url:Ext.fjs.datadict.report.g_url,params:{action:"order"},success:this.order_success,scope:this}));
		}
	},
	order_success:function(form,opts){
		this.window_close();
		var node=this.tree.getSelectionModel().getSelectedNode();
		if(this.grid){
			this.grid.reload(node.id);
		}else if(node){
			node.reload();
		}else{
			this.tree.root.reload();
		}
	},
	open:function(btn,grid){
		this.grid=grid;
		var sid=0,tid=0,node=this.tree.getSelectionModel().getSelectedNode();
		if(grid){
			sid=node.id;
		}else if(node){
			tid=node.id;
		}
		var bs=this.store.baseParams;
		Ext.fjs.setProperty(bs,"sid",sid);
		Ext.fjs.setProperty(bs,"tid",tid);
		this.form.getForm().findField("SID").setValue(sid);
		(function(){this.store.load()}).defer(100,this);
		this.show(btn.id);
	}
});
Ext.fjs.datadict.report.TreeBar=Ext.extend(Ext.tree.TreePanel,{
	constructor:function(grid){
		this.grid=grid;
		Ext.fjs.datadict.report.TreeBar.superclass.constructor.call(this,{
			iconCls:"mnu-table",
			title:"${dict.title.report}",
			region:"west",
			width:250,
			minSize:200,
			maxSize:300,
			animate:true,
			animCollapse:false,
			autoScroll:true,
			border:false,
			collapseFirst:false,
			collapseMode:"mini",
			collapsible:true,
			enableDD:true,
			split:true,
			style:"border-right:1px solid #8db2e3;",
			useArrows:true,
			rootVisible:false,
			root:{id:"0",type:"root",nodeType:"async"},
			loader:new Ext.tree.TreeLoader(),
			tbar:[
				this.refreshBtn=new Ext.Button({iconCls:"btn-refresh",text:"${fzm.btn.refresh}",tooltip:"${fzm.msg.refresh}",handler:this.refresh_onclick,scope:this}),'-',
				this.expandBtn=new Ext.Button({iconCls:"btn-expand",text:"${fzm.btn.expand}",tooltip:"${fzm.msg.expand}",handler:this.expandAll,scope:this}),'-',
				this.collapseBtn=new Ext.Button({iconCls:"btn-collapse",text:"${fzm.btn.collapse}",tooltip:"${fzm.msg.collapse}",handler:this.collapseAll,scope:this}),'-',
				this.orderBtn=new Ext.Button({iconCls:"btn-order",text:"${fzm.btn.order}",tooltip:"${fzm.msg.order}",handler:this.order_onclick,scope:this})
			],
			bbar:[
				this.addBtn=new Ext.Button({iconCls:"btn-add",text:"${fzm.btn.new}",tooltip:"${fzm.btn.add}",handler:this.add_onclick,scope:this}),'-',
				this.updateBtn=new Ext.Button({iconCls:"btn-edit",text:"${fzm.btn.modify}",tooltip:"${fzm.msg.modify}",disabled:true,handler:this.update_onclick,scope:this}),'-',
				this.deleteBtn=new Ext.Button({iconCls:"btn-delete",text:"${fzm.btn.delete}",tooltip:"${fzm.btn.delete}",disabled:true,handler:this.delete_onclick,scope:this}),'-',
				this.importBtn=new Ext.Button({iconCls:"mnu-database_refresh",text:"${fzm.btn.import}",tooltip:"${fzm.btn.import}",handler:this.import_onclick,scope:this})
			]
		});
		this.on("beforeload",this.evt_beforeload,this);
		this.on("click",function(node){
			if(node.hasChildNodes()){
				this.orderBtn.enable();
			}else{
				this.orderBtn.disable();
			}
			this.updateBtn.enable();
			this.deleteBtn.enable();
			this.grid.showTable(node);
		},this)
		this.on("contextmenu",this.show_contextmenu,this);
		this.on("movenode",this.evt_movenode,this);
	},
	evt_beforeload:function(node){
		this.loader.dataUrl=Ext.fjs.datadict.report.g_url+"?action=getChildrens&tid="+node.id;
	},
	evt_movenode:function(tree,node,op,np,index){
		Ext.fjs.post({url:Ext.fjs.datadict.report.g_url,params:{action:"move",sid:node.id,tid:np.id,index:index},success:this.move_success,scope:this});
	},
	move_success:function(res,opts){
		var rs=Ext.decode(res.responseText);
		if(rs.success){
			var node=this.getNodeById(opts.params.sid).parentNode;
			if(node){node.reload();}else{this.root.reload();}
		}else{
			Ext.fjs.showError(rs.message);
		}
	},
	refresh_onclick:function(){
		this.orderBtn.enable();
		this.updateBtn.disable();
		this.deleteBtn.disable();
		this.getSelectionModel().clearSelections();
		this.grid.edit.disable();
		this.root.reload();
	},
	order_onclick:function(btn){
		if(!this.ordWin){
			this.ordWin=new Ext.fjs.datadict.report.ordWindow(this);
		}
		this.ordWin.open(btn);
	},
	add_onclick:function(btn){
		if(!this.addWin){
			this.addWin=new Ext.fjs.datadict.report.addWindow(this);
		}
		this.addWin.show(btn.id);
	},
	update_onclick:function(btn){
		if(!this.updateWin){
			this.updateWin=new Ext.fjs.datadict.report.updateWindow(this);
		}
		this.updateWin.open(btn);
	},
	delete_onclick:function(){
		Ext.msg.confirm(Ext.fjs.NOTICE,Ext.fjs.del_confirm,this.delConfirm,this);
	},
	delConfirm:function(btn){
		if(btn=="yes"){
			var node=this.getSelectionModel().getSelectedNode();
			if(node){
				Ext.fjs.post({url:Ext.fjs.datadict.report.g_url,params:{action:"delete",sid:node.id},success:this.del_success,scope:this});
			}
		}
	},
	del_success:function(res,opts){
		var rs=Ext.decode(res.responseText);
		if(rs.success){
			this.grid.showTable();
			var node=this.getSelectionModel().getSelectedNode();
			node.parentNode.reload();
		}else{
			Ext.fjs.showError(rs.message);
		}
	},
	import_onclick:function(btn){
	},
	beforeDestroy:function(){
		if(this.addWin)Ext.destroy(this.addWin);
		if(this.updateWin)Ext.destroy(this.updateWin);
		if(this.ordWin)Ext.destroy(this.ordWin);
		Ext.fjs.datadict.report.TreeBar.superclass.beforeDestroy.call(this);
	}
});
Ext.fjs.datadict.report.EditBar=Ext.extend(Ext.Panel,{
	createForm:function(){
		this.fds="${dict.list.align}".split(",");
		this.gridA=new Ext.form.FormPanel({
			region:"north",
			layout:"html",
			layoutConfig:{css:"fjs-form",template:"datadict/report_form.tpl",topmargin:1,rigtmargin:1,bottommargin:1,leftmargin:1},
			height:65,
			border:false,
			items:[
				{xtype:"hidden",name:"SID"},
				{xtype:"displayfield",name:"SNO"},
				{xtype:"textfield",name:"NAME",width:200,allowBlank:false,boldLabel:true,minLength:2,maxLength:50},
				{xtype:"textfield",name:"TITLE",width:200,allowBlank:false,boldLabel:true,minLength:2,maxLength:100},
				{xtype:"textfield",name:"FNAME",width:200,allowBlank:false,boldLabel:true,minLength:2,maxLength:50}
			]
		});
		var fs=[];for(var i=0,j=this.fds.length;i<j;i++){var arr=[0,1];arr[0]=i;arr[1]=this.fds[i];fs.push(arr)}
		var cm=new Ext.grid.ColumnModel([
			new Ext.grid.RowNumber(),
			{header:"${fzm.msg.mark}",dataIndex:"NAME",width:60,menuDisabled:true},
			{header:"${dict.msg.name}",dataIndex:"NICE",width:120,menuDisabled:true,editor:new Ext.form.TextField({allowBlank:false,maxLength:50})},
			{header:"${dict.msg.width}",dataIndex:"WIDTH",width:50,menuDisabled:true,editor:new Ext.form.NumberField({allowDecimals:false,allowNegative:false})},
			{header:"${fzm.msg.pkid}",dataIndex:"PKID",width:40,menuDisabled:true},
			{xtype:"checkcolumn",header:"${fzm.msg.show}",dataIndex:"SHOW",width:45,menuDisabled:true},
			{xtype:"checkcolumn",header:"${fzm.btn.order}",dataIndex:"SORTAB",width:45,menuDisabled:true},
			{xtype:"checkcolumn",header:"${fzm.btn.export}",dataIndex:"EXPORT",width:45,menuDisabled:true},
			{header:"${dict.msg.align}",dataIndex:"TransType",width:80,menuDisabled:true,editor:new Ext.form.ComboBox({
				triggerAction:"all",
				editable:false,
				lazyRender:true,
				mode:"local",
				store:new Ext.data.ArrayStore({id:0,fields:["id","value"],data:fs
			}),valueField:"value",displayField:"value"})},
			{header:"${dict.msg.format}",dataIndex:"FORMTER",width:150,menuDisabled:true,editor:new Ext.form.TextField({allowBlank:true,maxLength:50})}
		]);
		var store=new Ext.data.ArrayStore({
			fields:["ID","NAME","NICE","WIDTH","PKID",{name:"SHOW",type:"bool"},{name:"SORTAB",type:"bool"},{name:"EXPORT",type:"bool"},"TID","TransType","FORMTER"]
		});
		this.gridB=new Ext.grid.EditorGridPanel({
			cls:"x-panel-mc",
			iconCls:"mnu-application_view_detail",
			title:"${dict.title.table}",
			region:"center",
			store:store,
			stripeRows:true,
			layout:"fit",
			height:500,
			autoScroll:true,
			boldHeader:true,
			border:false,
			clicksToEdit:1,
			columnLines:true,cm:cm,
			style:"border-top:1px solid #8db2e3;padding-top:0px;",
			tbar:['->',this.dictBtn=new Ext.Button({iconCls:"btn-order",text:"${fzm.btn.order}",handler:this.order_onclick,scope:this})]
		});
	},
	constructor:function(grid){
		this.grid=grid;this.createForm();
		Ext.fjs.datadict.report.EditBar.superclass.constructor.call(this,{
			cls:"x-panel-mc",
			iconCls:"mnu-package",
			title:"${fzm.msg.basic}",
			region:"center",
			layout:"border",
			border:false,
			disabled:true,
			style:"border-left:1px solid #8db2e3;padding-top:0px;",
			items:[this.gridA,this.gridB],
			buttonAlign:"center",
			buttons:[{iconCls:"btn-save",text:"${fzm.btn.save}",handler:this.save_onclick,scope:this}]
		});
		this.on("afterlayout",this.evt_afterlayout,this,{single:true});
	},
	evt_afterlayout:function(){this.disable();},
	reload:function(sid){
		this.sid=sid;
		if(!this.loadMask){
			this.loadMask=new Ext.LoadMask(this.bwrap);
		}
		this.loadMask.show();
		this.gridA.getForm().reset();
		Ext.fjs.post({url:Ext.fjs.datadict.report.g_url,params:{action:"getFieldInfo",sid:sid},success:this.load_success,scope:this});
	},
	load_success:function(res,opts){
		var rs=Ext.decode(res.responseText);
		if(rs.success){
			this.gridA.getForm().loadRecord(rs);
			this.gridB.store.loadData(rs.src);
			this.gridB.enable();
		}else{
			Ext.fjs.showError(rs.message);
		}
		this.loadMask.hide();
	},
	save_onclick:function(){
		if(!Ext.fjs.checkValid(this.gridA))return;
		var g=[],s=this.gridB.store,f=s.fields,fs=f.getCount();
		for(var i=0,len=s.getCount();i<len;i++){
			var arr=[],rec=s.getAt(i);
			var t=rec.get("TransType");
			for(var k in this.fds){if(this.fds[k]==t){rec.set("TID",k)}}
			for(var j=0;j<fs;j++){arr.push(rec.get(f.get(j).name))}
			g.push(arr);
		}
		this.gridA.getForm().submit(Ext.fjs.saveAction({url:Ext.fjs.datadict.report.g_url,params:{action:"save",dbSRC:Ext.encode(g)},success:this.save_success,scope:this}));
	},
	save_success:function(form,opts){
		Ext.msg.alert(Ext.fjs.NOTICE,opts.result.message);
		this.reload(this.sid);
	},
	order_onclick:function(btn){
		var tree=this.grid.tree;
		if(!tree.ordWin){
			tree.ordWin=new Ext.fjs.datadict.report.ordWindow(tree);
		}
		tree.ordWin.open(btn,this);
	}
});
Ext.fjs.datadict.report.MainPanel=Ext.extend(Ext.Panel,{
	constructor:function(){
		this.tree=new Ext.fjs.datadict.report.TreeBar(this);
		this.edit=new Ext.fjs.datadict.report.EditBar(this);
		Ext.fjs.datadict.report.MainPanel.superclass.constructor.call(this,{
			closable:true,
			layout:"border",
			items:[this.tree,this.edit]
		});
	},
	showTable:function(node){
		if(!node){
			this.edit.disable();
			return false;
		}else if(this.sid==node.id){
			return false;
		}
		if(node.leaf){
			this.edit.enable();
			this.edit.reload(node.id);
		}else{
			this.edit.disable();
		}
		this.sid=node.id;
		this.doLayout();
		this.edit.doLayout();
	},
	beforeDestroy:function(){
		Ext.destroy(this.edit);
		Ext.destroy(this.tree);
		Ext.fjs.datadict.report.MainPanel.superclass.beforeDestroy.call(this);
	}
});
